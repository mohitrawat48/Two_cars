module random_num_gen (
    input logic Clk,
    input logic Reset,
    output logic [2:0] rand_a_num,
	 output logic  rand_b_num,
	 input logic [31:0] seed 
    );
 
 
 logic [31:0] random,random_in;
 
 logic [31:0]feedback;
 assign feedback = {31'b0 , ( random[31] ^ random[21] ^ random[1] ^ random[0] ) }; 
 
 assign	rand_a ={ counter1[0], counter2[0], counter3[0] }  ;
 assign  rand_b = counter1[0]  ;
 
 logic [31:0] counter1,counter_in1;
 logic [31:0] counter2,counter_in2;
 logic [31:0] counter3,counter_in3;
 
always @ (posedge Clk or posedge Reset)
begin
 if (Reset)
 begin
  counter1 = seed;
  counter2 = seed;
  counter3 = seed;
 end

 else
 begin
  counter1<=counter_in1;
  counter2<=counter_in2;
  counter3<=counter_in3;
  
 end
end
 
always_comb
begin	

	random_in = {}
	
end
 
endmodule
